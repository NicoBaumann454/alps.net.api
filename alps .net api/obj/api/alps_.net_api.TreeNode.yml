### YamlMime:ManagedReference
items:
- uid: alps_.net_api.TreeNode
  commentId: T:alps_.net_api.TreeNode
  id: TreeNode
  parent: alps_.net_api
  children:
  - alps_.net_api.TreeNode.#ctor
  - alps_.net_api.TreeNode.#ctor(System.Collections.Generic.List{alps_.net_api.TreeNode})
  - alps_.net_api.TreeNode.#ctor(System.String)
  - alps_.net_api.TreeNode.#ctor(System.String,alps_.net_api.TreeNode,alps_.net_api.TreeNode)
  - alps_.net_api.TreeNode.addChild(alps_.net_api.TreeNode)
  - alps_.net_api.TreeNode.containsContent(System.String)
  - alps_.net_api.TreeNode.factoryMethod(System.String)
  - alps_.net_api.TreeNode.getChildNodes
  - alps_.net_api.TreeNode.getContent
  - alps_.net_api.TreeNode.getParentNode
  - alps_.net_api.TreeNode.setChildNodes(System.Collections.Generic.List{alps_.net_api.TreeNode})
  - alps_.net_api.TreeNode.setParentNode(alps_.net_api.TreeNode)
  - alps_.net_api.TreeNode.ToString
  langs:
  - csharp
  - vb
  name: TreeNode
  nameWithType: TreeNode
  fullName: alps_.net_api.TreeNode
  type: Class
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: TreeNode
    path: TreeNode.cs
    startLine: 44
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\nClass that represents a tree node\n"
  example: []
  syntax:
    content: 'public class TreeNode : ITreeNode'
    content.vb: >-
      Public Class TreeNode
          Implements ITreeNode
  inheritance:
  - System.Object
  implements:
  - alps_.net_api.ITreeNode
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: alps_.net_api.TreeNode.#ctor
  commentId: M:alps_.net_api.TreeNode.#ctor
  id: '#ctor'
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: alps_.net_api.TreeNode.TreeNode()
  type: Constructor
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: .ctor
    path: TreeNode.cs
    startLine: 53
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\nConstructor that creates a empty tree node\n"
  example: []
  syntax:
    content: public TreeNode()
    content.vb: Public Sub New
  overload: alps_.net_api.TreeNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: alps_.net_api.TreeNode.#ctor(System.String)
  commentId: M:alps_.net_api.TreeNode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: alps_.net_api.TreeNode.TreeNode(System.String)
  type: Constructor
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: .ctor
    path: TreeNode.cs
    startLine: 62
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\n\n"
  example: []
  syntax:
    content: public TreeNode(string content)
    parameters:
    - id: content
      type: System.String
      description: ''
    content.vb: Public Sub New(content As String)
  overload: alps_.net_api.TreeNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: alps_.net_api.TreeNode.#ctor(System.String,alps_.net_api.TreeNode,alps_.net_api.TreeNode)
  commentId: M:alps_.net_api.TreeNode.#ctor(System.String,alps_.net_api.TreeNode,alps_.net_api.TreeNode)
  id: '#ctor(System.String,alps_.net_api.TreeNode,alps_.net_api.TreeNode)'
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: TreeNode(String, TreeNode, TreeNode)
  nameWithType: TreeNode.TreeNode(String, TreeNode, TreeNode)
  fullName: alps_.net_api.TreeNode.TreeNode(System.String, alps_.net_api.TreeNode, alps_.net_api.TreeNode)
  type: Constructor
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: .ctor
    path: TreeNode.cs
    startLine: 73
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\n\n"
  example: []
  syntax:
    content: public TreeNode(string content, TreeNode parent, TreeNode child)
    parameters:
    - id: content
      type: System.String
      description: ''
    - id: parent
      type: alps_.net_api.TreeNode
      description: ''
    - id: child
      type: alps_.net_api.TreeNode
      description: ''
    content.vb: Public Sub New(content As String, parent As TreeNode, child As TreeNode)
  overload: alps_.net_api.TreeNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: alps_.net_api.TreeNode.#ctor(System.Collections.Generic.List{alps_.net_api.TreeNode})
  commentId: M:alps_.net_api.TreeNode.#ctor(System.Collections.Generic.List{alps_.net_api.TreeNode})
  id: '#ctor(System.Collections.Generic.List{alps_.net_api.TreeNode})'
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: TreeNode(List<TreeNode>)
  nameWithType: TreeNode.TreeNode(List<TreeNode>)
  fullName: alps_.net_api.TreeNode.TreeNode(System.Collections.Generic.List<alps_.net_api.TreeNode>)
  type: Constructor
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: .ctor
    path: TreeNode.cs
    startLine: 84
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\n\n"
  example: []
  syntax:
    content: public TreeNode(List<TreeNode> childNodes)
    parameters:
    - id: childNodes
      type: System.Collections.Generic.List{alps_.net_api.TreeNode}
      description: ''
    content.vb: Public Sub New(childNodes As List(Of TreeNode))
  overload: alps_.net_api.TreeNode.#ctor*
  nameWithType.vb: TreeNode.TreeNode(List(Of TreeNode))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: alps_.net_api.TreeNode.TreeNode(System.Collections.Generic.List(Of alps_.net_api.TreeNode))
  name.vb: TreeNode(List(Of TreeNode))
- uid: alps_.net_api.TreeNode.setParentNode(alps_.net_api.TreeNode)
  commentId: M:alps_.net_api.TreeNode.setParentNode(alps_.net_api.TreeNode)
  id: setParentNode(alps_.net_api.TreeNode)
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: setParentNode(TreeNode)
  nameWithType: TreeNode.setParentNode(TreeNode)
  fullName: alps_.net_api.TreeNode.setParentNode(alps_.net_api.TreeNode)
  type: Method
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: setParentNode
    path: TreeNode.cs
    startLine: 93
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\n\n"
  example: []
  syntax:
    content: public void setParentNode(TreeNode parent)
    parameters:
    - id: parent
      type: alps_.net_api.TreeNode
      description: ''
    content.vb: Public Sub setParentNode(parent As TreeNode)
  overload: alps_.net_api.TreeNode.setParentNode*
  implements:
  - alps_.net_api.ITreeNode.setParentNode(alps_.net_api.TreeNode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: alps_.net_api.TreeNode.setChildNodes(System.Collections.Generic.List{alps_.net_api.TreeNode})
  commentId: M:alps_.net_api.TreeNode.setChildNodes(System.Collections.Generic.List{alps_.net_api.TreeNode})
  id: setChildNodes(System.Collections.Generic.List{alps_.net_api.TreeNode})
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: setChildNodes(List<TreeNode>)
  nameWithType: TreeNode.setChildNodes(List<TreeNode>)
  fullName: alps_.net_api.TreeNode.setChildNodes(System.Collections.Generic.List<alps_.net_api.TreeNode>)
  type: Method
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: setChildNodes
    path: TreeNode.cs
    startLine: 102
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\n\n"
  example: []
  syntax:
    content: public void setChildNodes(List<TreeNode> childNodes)
    parameters:
    - id: childNodes
      type: System.Collections.Generic.List{alps_.net_api.TreeNode}
      description: ''
    content.vb: Public Sub setChildNodes(childNodes As List(Of TreeNode))
  overload: alps_.net_api.TreeNode.setChildNodes*
  nameWithType.vb: TreeNode.setChildNodes(List(Of TreeNode))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: alps_.net_api.TreeNode.setChildNodes(System.Collections.Generic.List(Of alps_.net_api.TreeNode))
  name.vb: setChildNodes(List(Of TreeNode))
- uid: alps_.net_api.TreeNode.addChild(alps_.net_api.TreeNode)
  commentId: M:alps_.net_api.TreeNode.addChild(alps_.net_api.TreeNode)
  id: addChild(alps_.net_api.TreeNode)
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: addChild(TreeNode)
  nameWithType: TreeNode.addChild(TreeNode)
  fullName: alps_.net_api.TreeNode.addChild(alps_.net_api.TreeNode)
  type: Method
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: addChild
    path: TreeNode.cs
    startLine: 111
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\n\n"
  example: []
  syntax:
    content: public void addChild(TreeNode child)
    parameters:
    - id: child
      type: alps_.net_api.TreeNode
      description: ''
    content.vb: Public Sub addChild(child As TreeNode)
  overload: alps_.net_api.TreeNode.addChild*
  implements:
  - alps_.net_api.ITreeNode.addChild(alps_.net_api.TreeNode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: alps_.net_api.TreeNode.getParentNode
  commentId: M:alps_.net_api.TreeNode.getParentNode
  id: getParentNode
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: getParentNode()
  nameWithType: TreeNode.getParentNode()
  fullName: alps_.net_api.TreeNode.getParentNode()
  type: Method
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: getParentNode
    path: TreeNode.cs
    startLine: 121
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\n\n"
  example: []
  syntax:
    content: public TreeNode getParentNode()
    return:
      type: alps_.net_api.TreeNode
      description: ''
    content.vb: Public Function getParentNode As TreeNode
  overload: alps_.net_api.TreeNode.getParentNode*
  implements:
  - alps_.net_api.ITreeNode.getParentNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: alps_.net_api.TreeNode.getChildNodes
  commentId: M:alps_.net_api.TreeNode.getChildNodes
  id: getChildNodes
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: getChildNodes()
  nameWithType: TreeNode.getChildNodes()
  fullName: alps_.net_api.TreeNode.getChildNodes()
  type: Method
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: getChildNodes
    path: TreeNode.cs
    startLine: 130
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\n\n"
  example: []
  syntax:
    content: public List<TreeNode> getChildNodes()
    return:
      type: System.Collections.Generic.List{alps_.net_api.TreeNode}
      description: ''
    content.vb: Public Function getChildNodes As List(Of TreeNode)
  overload: alps_.net_api.TreeNode.getChildNodes*
  implements:
  - alps_.net_api.ITreeNode.getChildNodes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: alps_.net_api.TreeNode.getContent
  commentId: M:alps_.net_api.TreeNode.getContent
  id: getContent
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: getContent()
  nameWithType: TreeNode.getContent()
  fullName: alps_.net_api.TreeNode.getContent()
  type: Method
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: getContent
    path: TreeNode.cs
    startLine: 139
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\n\n"
  example: []
  syntax:
    content: public string getContent()
    return:
      type: System.String
      description: ''
    content.vb: Public Function getContent As String
  overload: alps_.net_api.TreeNode.getContent*
  implements:
  - alps_.net_api.ITreeNode.getContent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: alps_.net_api.TreeNode.ToString
  commentId: M:alps_.net_api.TreeNode.ToString
  id: ToString
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TreeNode.ToString()
  fullName: alps_.net_api.TreeNode.ToString()
  type: Method
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: ToString
    path: TreeNode.cs
    startLine: 148
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\n\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: alps_.net_api.TreeNode.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: alps_.net_api.TreeNode.factoryMethod(System.String)
  commentId: M:alps_.net_api.TreeNode.factoryMethod(System.String)
  id: factoryMethod(System.String)
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: factoryMethod(String)
  nameWithType: TreeNode.factoryMethod(String)
  fullName: alps_.net_api.TreeNode.factoryMethod(System.String)
  type: Method
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: factoryMethod
    path: TreeNode.cs
    startLine: 175
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\n\n"
  example: []
  syntax:
    content: public TreeNode factoryMethod(string uri)
    parameters:
    - id: uri
      type: System.String
      description: ''
    return:
      type: alps_.net_api.TreeNode
      description: ''
    content.vb: Public Function factoryMethod(uri As String) As TreeNode
  overload: alps_.net_api.TreeNode.factoryMethod*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: alps_.net_api.TreeNode.containsContent(System.String)
  commentId: M:alps_.net_api.TreeNode.containsContent(System.String)
  id: containsContent(System.String)
  parent: alps_.net_api.TreeNode
  langs:
  - csharp
  - vb
  name: containsContent(String)
  nameWithType: TreeNode.containsContent(String)
  fullName: alps_.net_api.TreeNode.containsContent(System.String)
  type: Method
  source:
    remote:
      path: alps .net api/alps .net api/TreeNode.cs
      branch: master
      repo: http://imi-dev.imi.kit.edu:443/ukerz/alps-.net-api.git
    id: containsContent
    path: TreeNode.cs
    startLine: 187
  assemblies:
  - alps.net_api
  namespace: alps_.net_api
  summary: "\n\n"
  example: []
  syntax:
    content: public bool containsContent(string compare)
    parameters:
    - id: compare
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function containsContent(compare As String) As Boolean
  overload: alps_.net_api.TreeNode.containsContent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: alps_.net_api
  commentId: N:alps_.net_api
  name: alps_.net_api
  nameWithType: alps_.net_api
  fullName: alps_.net_api
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: alps_.net_api.ITreeNode
  commentId: T:alps_.net_api.ITreeNode
  parent: alps_.net_api
  name: ITreeNode
  nameWithType: ITreeNode
  fullName: alps_.net_api.ITreeNode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: alps_.net_api.TreeNode.#ctor*
  commentId: Overload:alps_.net_api.TreeNode.#ctor
  name: TreeNode
  nameWithType: TreeNode.TreeNode
  fullName: alps_.net_api.TreeNode.TreeNode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: alps_.net_api.TreeNode
  commentId: T:alps_.net_api.TreeNode
  parent: alps_.net_api
  name: TreeNode
  nameWithType: TreeNode
  fullName: alps_.net_api.TreeNode
- uid: System.Collections.Generic.List{alps_.net_api.TreeNode}
  commentId: T:System.Collections.Generic.List{alps_.net_api.TreeNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TreeNode>
  nameWithType: List<TreeNode>
  fullName: System.Collections.Generic.List<alps_.net_api.TreeNode>
  nameWithType.vb: List(Of TreeNode)
  fullName.vb: System.Collections.Generic.List(Of alps_.net_api.TreeNode)
  name.vb: List(Of TreeNode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: alps_.net_api.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: alps_.net_api.TreeNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: alps_.net_api.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: alps_.net_api.TreeNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: alps_.net_api.TreeNode.setParentNode*
  commentId: Overload:alps_.net_api.TreeNode.setParentNode
  name: setParentNode
  nameWithType: TreeNode.setParentNode
  fullName: alps_.net_api.TreeNode.setParentNode
- uid: alps_.net_api.ITreeNode.setParentNode(alps_.net_api.TreeNode)
  commentId: M:alps_.net_api.ITreeNode.setParentNode(alps_.net_api.TreeNode)
  parent: alps_.net_api.ITreeNode
  name: setParentNode(TreeNode)
  nameWithType: ITreeNode.setParentNode(TreeNode)
  fullName: alps_.net_api.ITreeNode.setParentNode(alps_.net_api.TreeNode)
  spec.csharp:
  - uid: alps_.net_api.ITreeNode.setParentNode(alps_.net_api.TreeNode)
    name: setParentNode
    nameWithType: ITreeNode.setParentNode
    fullName: alps_.net_api.ITreeNode.setParentNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: alps_.net_api.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: alps_.net_api.TreeNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: alps_.net_api.ITreeNode.setParentNode(alps_.net_api.TreeNode)
    name: setParentNode
    nameWithType: ITreeNode.setParentNode
    fullName: alps_.net_api.ITreeNode.setParentNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: alps_.net_api.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: alps_.net_api.TreeNode
  - name: )
    nameWithType: )
    fullName: )
- uid: alps_.net_api.TreeNode.setChildNodes*
  commentId: Overload:alps_.net_api.TreeNode.setChildNodes
  name: setChildNodes
  nameWithType: TreeNode.setChildNodes
  fullName: alps_.net_api.TreeNode.setChildNodes
- uid: alps_.net_api.TreeNode.addChild*
  commentId: Overload:alps_.net_api.TreeNode.addChild
  name: addChild
  nameWithType: TreeNode.addChild
  fullName: alps_.net_api.TreeNode.addChild
- uid: alps_.net_api.ITreeNode.addChild(alps_.net_api.TreeNode)
  commentId: M:alps_.net_api.ITreeNode.addChild(alps_.net_api.TreeNode)
  parent: alps_.net_api.ITreeNode
  name: addChild(TreeNode)
  nameWithType: ITreeNode.addChild(TreeNode)
  fullName: alps_.net_api.ITreeNode.addChild(alps_.net_api.TreeNode)
  spec.csharp:
  - uid: alps_.net_api.ITreeNode.addChild(alps_.net_api.TreeNode)
    name: addChild
    nameWithType: ITreeNode.addChild
    fullName: alps_.net_api.ITreeNode.addChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: alps_.net_api.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: alps_.net_api.TreeNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: alps_.net_api.ITreeNode.addChild(alps_.net_api.TreeNode)
    name: addChild
    nameWithType: ITreeNode.addChild
    fullName: alps_.net_api.ITreeNode.addChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: alps_.net_api.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: alps_.net_api.TreeNode
  - name: )
    nameWithType: )
    fullName: )
- uid: alps_.net_api.TreeNode.getParentNode*
  commentId: Overload:alps_.net_api.TreeNode.getParentNode
  name: getParentNode
  nameWithType: TreeNode.getParentNode
  fullName: alps_.net_api.TreeNode.getParentNode
- uid: alps_.net_api.ITreeNode.getParentNode
  commentId: M:alps_.net_api.ITreeNode.getParentNode
  parent: alps_.net_api.ITreeNode
  name: getParentNode()
  nameWithType: ITreeNode.getParentNode()
  fullName: alps_.net_api.ITreeNode.getParentNode()
  spec.csharp:
  - uid: alps_.net_api.ITreeNode.getParentNode
    name: getParentNode
    nameWithType: ITreeNode.getParentNode
    fullName: alps_.net_api.ITreeNode.getParentNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: alps_.net_api.ITreeNode.getParentNode
    name: getParentNode
    nameWithType: ITreeNode.getParentNode
    fullName: alps_.net_api.ITreeNode.getParentNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: alps_.net_api.TreeNode.getChildNodes*
  commentId: Overload:alps_.net_api.TreeNode.getChildNodes
  name: getChildNodes
  nameWithType: TreeNode.getChildNodes
  fullName: alps_.net_api.TreeNode.getChildNodes
- uid: alps_.net_api.ITreeNode.getChildNodes
  commentId: M:alps_.net_api.ITreeNode.getChildNodes
  parent: alps_.net_api.ITreeNode
  name: getChildNodes()
  nameWithType: ITreeNode.getChildNodes()
  fullName: alps_.net_api.ITreeNode.getChildNodes()
  spec.csharp:
  - uid: alps_.net_api.ITreeNode.getChildNodes
    name: getChildNodes
    nameWithType: ITreeNode.getChildNodes
    fullName: alps_.net_api.ITreeNode.getChildNodes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: alps_.net_api.ITreeNode.getChildNodes
    name: getChildNodes
    nameWithType: ITreeNode.getChildNodes
    fullName: alps_.net_api.ITreeNode.getChildNodes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: alps_.net_api.TreeNode.getContent*
  commentId: Overload:alps_.net_api.TreeNode.getContent
  name: getContent
  nameWithType: TreeNode.getContent
  fullName: alps_.net_api.TreeNode.getContent
- uid: alps_.net_api.ITreeNode.getContent
  commentId: M:alps_.net_api.ITreeNode.getContent
  parent: alps_.net_api.ITreeNode
  name: getContent()
  nameWithType: ITreeNode.getContent()
  fullName: alps_.net_api.ITreeNode.getContent()
  spec.csharp:
  - uid: alps_.net_api.ITreeNode.getContent
    name: getContent
    nameWithType: ITreeNode.getContent
    fullName: alps_.net_api.ITreeNode.getContent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: alps_.net_api.ITreeNode.getContent
    name: getContent
    nameWithType: ITreeNode.getContent
    fullName: alps_.net_api.ITreeNode.getContent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: alps_.net_api.TreeNode.ToString*
  commentId: Overload:alps_.net_api.TreeNode.ToString
  name: ToString
  nameWithType: TreeNode.ToString
  fullName: alps_.net_api.TreeNode.ToString
- uid: alps_.net_api.TreeNode.factoryMethod*
  commentId: Overload:alps_.net_api.TreeNode.factoryMethod
  name: factoryMethod
  nameWithType: TreeNode.factoryMethod
  fullName: alps_.net_api.TreeNode.factoryMethod
- uid: alps_.net_api.TreeNode.containsContent*
  commentId: Overload:alps_.net_api.TreeNode.containsContent
  name: containsContent
  nameWithType: TreeNode.containsContent
  fullName: alps_.net_api.TreeNode.containsContent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
